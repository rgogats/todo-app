(()=>{"use strict";(()=>{const e=document.querySelector("div#content");document.querySelector("h1").style.fontSize="1.5rem";const t=document.querySelector("button#new-todo"),o=document.querySelector("div.modal"),d=document.querySelector("form"),n=document.querySelector("button.close"),l=document.createElement("div.todo-list");l.className="todolist-container";const c=document.createElement("h3.list"),s=((e,t)=>{const o=[];let d="active";return{getTodos:()=>o,addTodo:t=>{o.push(t),t.moveTodo(e)},removeTodo:e=>{for(let t=0;t<o.length;t++)return o[t]===e?(o.splice(o[t],1),console.log("updated todos in list",o)):"Todo not found"},getLabel:()=>t,editLabel:e=>{t=e},deleteList:()=>{d="deleted"}}})(1,"Default List");c.textContent=s.getLabel(),t.addEventListener("click",(()=>{console.log("click new todo"),o.style.display="block"})),n.addEventListener("click",(()=>{o.style.display="none"})),d.addEventListener("submit",(t=>{t.preventDefault();const d=document.querySelector("input#title.form-control"),n=document.querySelector("input#desc.form-control");console.log("todo contents",d.value,n.value);const c=((e,t)=>{let o,d,n,l="active",c=t.slice(0,20);return{getTodo:()=>({title:e,desc:t,descPreview:c}),editTodo:(o,d)=>{e=o,t=d},setPriority:e=>{o=e},setDueDate:e=>{d=e},moveTodo:e=>{n=e},deleteTodo:()=>{l="deleted",console.log("status: ",l)}}})(d.value,n.value);console.log("newTodo",c),s.addTodo(c);const i=document.createElement("div.todo");i.className="todo-container";const r=document.createElement("div.title");r.className="todo-item";const u=document.createElement("div.desc");i.appendChild(r),i.appendChild(u),l.appendChild(i),r.textContent=`Title: ${c.getTodo().title}`,u.textContent=`Description: ${c.getTodo().descPreview}`,e.appendChild(l),console.log("get defaultList - first todo",s.getTodos()[0]),o.style.display="none"})),console.log("defaultList",s)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,