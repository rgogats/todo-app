(()=>{"use strict";const e=[],t=()=>e,o=(t,o)=>{console.log("new todolist",t,o);const l=[];let n="active";return e.push({id:t,label:o}),console.log("all todolists",e),console.log("all todolists.length",e.length),{getTodos:()=>l,addTodo:e=>{l.push(e),e.moveTodo(t)},removeTodo:e=>{for(let t=0;t<l.length;t++)return l[t]===e?(l.splice(l[t],1),console.log("updated todos in list",l)):"Todo not found"},getLabel:()=>o,getId:()=>t,editLabel:e=>{o=e},deleteList:()=>{n="deleted"}}};(()=>{const e=document.querySelector("div#content"),l=(document.querySelector("h1"),document.querySelector("button#new-todo")),n=document.querySelector("div#newTodoModal"),d=document.querySelector("form"),c=document.querySelector("input#title.form-control"),s=document.querySelector("textarea#desc.form-control"),a=document.querySelector("select#list.form-control"),i=document.querySelector("button.close"),r=document.querySelector("button#new-todolist"),u=document.createElement("div");u.className="todolist-container";const m=document.createElement("h3");m.className="list-label",u.appendChild(m),e.appendChild(u);const g=o(0,"Default List");m.textContent=g.getLabel(),l.addEventListener("click",(()=>{console.log("click new todo"),n.style.display="block",console.log(a);for(let e=0;e<t().length;e++){const o=document.createElement("option");o.value=t()[e].label,a.appendChild(o),o.textContent=t()[e].label}})),i.addEventListener("click",(()=>{n.style.display="none"})),d.addEventListener("submit",(e=>{let o,l;e.preventDefault();for(let e=0;e<t().length;e++)t()[e].label===a.value?(o=t()[e].id,console.log("match found",t()[e])):console.log("noMatch");o&&(console.log(`matching... ${o}`),l=document.querySelector(`div.todolist-container[data-index="${o}"]`),console.log("matchingListContainer",l));const d=((e,t,o)=>{let l,n,d="active",c=t.length>20?t.slice(0,20)+"[...]":t;return{getTodo:()=>({title:e,desc:t,descPreview:c}),editTodo:(o,l)=>{e=o,t=l},setPriority:e=>{l=e},setDueDate:e=>{n=e},moveTodo:e=>{},deleteTodo:()=>{d="deleted",console.log("status: ",d)}}})(c.value,s.value);console.log("newTodo",d),g.addTodo(d);const i=document.createElement("div");i.className="todo-container",l.appendChild(i);const r=document.createElement("div");r.className="todo-title";const u=document.createElement("div");u.className="todo-desc",r.textContent=`Title: ${d.getTodo().title}`,u.textContent=`Description: ${d.getTodo().descPreview}`;const m=document.createElement("button");m.className="edit",m.textContent="Edit";const p=document.createElement("button");p.className="delete",p.textContent="Delete",c.value="",s.textContent="",i.appendChild(r),i.appendChild(u),i.appendChild(m),i.appendChild(p),i.addEventListener("click",(()=>{console.log("expanded details here")})),m.addEventListener("click",(()=>{console.log("edit form here")})),p.addEventListener("click",(()=>{console.log("delete logic here")})),n.style.display="none"})),r.addEventListener("click",(()=>{const l=document.createElement("div"),n=document.createElement("input"),d=document.createElement("h3");let c;n.addEventListener("keypress",(e=>{"Enter"===e.key&&(c=o(t().length,n.value),console.log("getAllTodoLists.length",t().length),l.removeChild(n),d.className="list-label",d.textContent=c.getLabel(),console.log(c.getLabel()),l.dataset.index=c.getId())})),l.className="todolist-container",l.appendChild(d),l.appendChild(n),e.appendChild(l),console.log("add listContainer",l)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,